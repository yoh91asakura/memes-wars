
# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Build outputs
dist/
build/
.next/
out/

# Environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# OS files
# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Icon?

# IDE and editors
.vscode/
.idea/
*.swp
*.swo
*~
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-project
*.sublime-workspace

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov
.nyc_output/

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm/

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache/
.parcel-cache/

# Next.js build output
.next/
out/

# Nuxt.js build / generate output
.nuxt/
dist/

# Gatsby files
.cache/
public/

# Storybook build outputs
.out/
.storybook-out/

# Temporary folders
tmp/
temp/

# Playwright
/test-results/
/playwright-report/
/blob-report/
/playwright/.cache/

# Vitest
coverage/


# ============================================
# LOCAL DEVELOPMENT TOOLS
# Each developer must set up their own environment
# ============================================

# === TASK MANAGEMENT SYSTEM ===
# Task tracking is NOW versioned for project clarity
# (removed from gitignore)

# === CLAUDE FLOW + SPARC METHODOLOGY ===
# All Claude Flow generated files and directories
.claude/
.claude-flow/
.swarm/
.hive-mind/
claude-flow/
.roo/
.roomodes
claude-flow
claude-flow.bat
claude-flow.ps1

# Memory and coordination systems
memory/
coordination/

# MCP configuration files
.mcp.json
claude-flow.config.json
mcp-config.json

# SPARC workflow files
hive-mind-prompt-*.txt
sparc-*.md
workflow-*.md


# Local configuration files
.env.local
.env.*.local
*.local.json
*.local.yml
*.local.yaml
config.local.*
settings.local.*

# MCP and development configs
.roo/
*.local.json
*.local.yml
*.local.yaml
config.local.*
settings.local.*

# Platform-specific scripts backups
*.backup
*.bak
*.old

# Git hooks (platform-specific)
.git/hooks/*
!.git/hooks/*.sample

# Playwright
playwright-report/
test-results/
.playwright/

# Windows specific configuration files
start-archon.bat
stop-archon.bat
*.ps1.log
*.bat
*.ps1
*.cmd
windows-*.json
windows-*.config
.vs/
*.vcxproj*
*.sln
*.suo
*.user
*.userosscache
*.sln.docstates
scripts/setup-windows.ps1
scripts/*.bat
scripts/*.ps1
# But we DO track task management scripts
!scripts/tasks/*.js

# Windows npm/node specific
node.exe
npm.cmd
npx.cmd
yarn.cmd
pnpm.cmd

# Windows build artifacts
*.dll
*.exe
*.obj
*.ilk
*.pdb

# Windows package manager
packages.config
*.nupkg

# Platform-specific lock files that might differ
package-lock.json.windows
yarn.lock.windows
pnpm-lock.yaml.windows

# Task tracking temporary files (only temp files ignored)
tasks/*.tmp
tasks/*.lock
sync-status.json

# Platform-specific configuration
.vscode/settings.json
.vscode/launch.json
.vscode/tasks.json
.vscode/*.code-workspace
tsconfig.tsbuildinfo

# Windows-specific Node/NPM paths
node_modules/.bin/*.cmd
node_modules/.bin/*.ps1
node_modules/.cache/

# Electron/Desktop app Windows specific
out/
release/
dist-electron/
*.msi
*.exe
*.appx

# Windows Defender and system files
System Volume Information/
$WINDOWS.~BT/
$WINDOWS.~WS/
hiberfil.sys
pagefile.sys
swapfile.sys

# === LOCAL DEVELOPMENT TRACKING ===
# Task tracking NOW in version control for team collaboration
# Only ignore temporary files
tasks/*.tmp
tasks/*.lock
sync-status.json

# === DOCUMENTATION EXCEPTIONS ===
# Only CLAUDE.md is versioned for workflow reference
!CLAUDE.md
!LOCAL_SETUP.md

# Generated workflow documentation (local only)
docs/workflow-*.md
docs/pseudocode/
docs/architecture/
docs/gitignore-workflow-guide.md
!docs/README.md
!docs/specifications/

# Scripts de validation (locaux uniquement)
scripts/validate-gitignore.sh

# Python scripts for development
*.py
archon-mcp-bridge.py

# Database files
*.db
*.db-journal
*.db-wal
*.sqlite
*.sqlite-journal
*.sqlite-wal

# === ADDITIONAL CLAUDE FLOW FILES ===
# These may be generated during runtime
memory/claude-flow-data.json
memory/sessions/*
!memory/sessions/README.md
memory/agents/*
!memory/agents/README.md
coordination/memory_bank/*
coordination/subtasks/*
coordination/orchestration/*

# === CLAUDE CODE INTEGRATION ===
# Personal Claude Code settings (keep individual preferences)
.vscode/settings.json
.vscode/launch.json
.vscode/tasks.json
.vscode/*.code-workspace

# === PERFORMANCE AND MONITORING ===
# Generated performance reports
performance-*.json
metrics-*.json
bottleneck-*.md
token-usage-*.json

# === SESSION AND CACHE ===
# Session data and cache files
.sessions/
.cache-*
session-*.json
swarm-session-*.json

# ============================================
# WORKFLOW RULES SUMMARY
# ============================================
# 
# ‚úÖ COMMIT TO GIT:
# - Application source code (src/, tests/, config/)
# - Package configuration (package.json, tsconfig.json)
# - Build configuration (vite.config.ts, etc.)
# - Documentation (CLAUDE.md, LOCAL_SETUP.md, docs/specifications/)
# - Task management system (tasks/, scripts/tasks/)
# - Project status files (PROJECT_STATUS.md, ROADMAP.md, ONBOARDING.md)
# - This .gitignore file
#
# ‚ùå NEVER COMMIT:
# - Local development tools (.claude/, memory/, coordination/)
# - Personal IDE settings (.vscode/settings.json)
# - Environment files (.env.local)
# - Temporary task files (*.tmp, *.lock)
# - Generated workflow files
# - MCP server configurations
# - Database files and logs
#
# üîÑ WORKFLOW:
# 1. Each developer sets up their own environment using LOCAL_SETUP.md
# 2. Use local task management system for tracking work
# 3. Use SPARC methodology for development
# 4. Keep only application code in Git
# ============================================

# Claude Flow generated files
.claude/settings.local.json
.mcp.json
claude-flow.config.json
.swarm/
.hive-mind/
memory/claude-flow-data.json
memory/sessions/*
!memory/sessions/README.md
memory/agents/*
!memory/agents/README.md
coordination/memory_bank/*
coordination/subtasks/*
coordination/orchestration/*
*.db
*.db-journal
*.db-wal
*.sqlite
*.sqlite-journal
*.sqlite-wal
claude-flow
claude-flow.bat
claude-flow.ps1
hive-mind-prompt-*.txt

logs
dev-debug.log
# Environment variables
# Editor directories and files
.idea
.vscode
*.ntvs*
*.njsproj
*.sw?
# OS specific

# Task files
# tasks.json
# tasks/ 
